# import Organisation, User, ROLE, Document, Section, DocumentConfig from "./generated/prisma.graphql"

type Query {
  info: String!
  allOrganisations: [Organisation!]!
  documentFeed: [Document!]!
  singleDocument(id: ID!): Document
  organisation: Organisation
  # organisation(where: OrganisationWhereUniqueInput!): Organisation
  orgDataConfigs(orgId: ID!): [DataConfig]!
  # document(where: DocumentWhereUniqueInput!): Document
  # singleDocument(where: DocumentWhereUniqueInput!): Document
  allUsers: [User!]!
  getUser: User!
}

type Mutation {
  # postDocument(name: String, orgId: ID, userId: ID): Document!
  # postDocument(name: String, createdFor: ID): Document!
  postDocument(name: String, orgId: ID): Document!
  postSection(type: String, belongsTo: ID): Section!
  # updateSection(data: SectionUpdateInput!, where: SectionWhereUniqueInput!): Section
  updateSection(rawContent: Json, sectionId: ID!): Section
  updateDocument(id: ID!, name: String): Document!
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  postDataConfig(name: String!, url: String!, params: Json): DataConfig!
  changeUserRole(id: ID!, role: ROLE!): User!
  addOrgToUser(orgId: ID!, userId: ID!): User!
  removeOrgFromUser(orgId: ID!, userId: ID!): User!
  deleteSection(sectionId: ID!): Section!
}

# type Document {
#   id: ID!
#   name: String
# }

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  documents: [Document!]!
  organisations: [Organisation!]!
  role: ROLE!
}
