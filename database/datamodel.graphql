type Organisation {
  id: ID! @unique
  name: String
  documents: [Document!]!
    @relation(name: "OrganisationDocuments", onDelete: CASCADE)
  users: [User!]!
  dataConfigs: [DataConfig!]!
    @relation(name: "OrganisationDataConfigs", onDelete: CASCADE)
}

type Document {
  id: ID! @unique
  createdAt: DateTime!
  name: String
  createdBy: User
  createdFor: Organisation @relation(name: "OrganisationDocuments")
  config: DocumentConfig
  tags: [Tag!]!
  sections: [Section!]! @relation(name: "DocumentSections", onDelete: CASCADE)
  shortCodes: Json
}

type Section {
  id: ID! @unique
  createdAt: DateTime!
  createdBy: User
  belongsTo: Document @relation(name: "DocumentSections")
  type: String
  rawContent: Json
  position: Int
}

type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  password: String!
  documents: [Document!]!
  organisations: [Organisation!]!
}

type DocumentConfig {
  id: ID! @unique
  dataUrl: String
  params: Json
  belongsTo: Document!
}

type Tag {
  id: ID! @unique
  name: String! @unique
  documents: [Document!]!
}

type DataConfig {
  id: ID! @unique
  organisation: Organisation @relation(name: "OrganisationDataConfigs")
  name: String!
  url: String!
  params: Json
}
